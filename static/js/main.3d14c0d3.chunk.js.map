{"version":3,"sources":["components/Search/index.js","components/Page/index.js","components/Display/index.js","App.js","reportWebVitals.js","index.js"],"names":["Search","setIssues","setPage","setShow","setFlag","useState","username","reponame","repo","setRepo","handleChange","event","target","id","value","type","placeholder","className","onChange","onClick","fetch","then","res","status","json","Error","data","totalPage","length","Math","floor","defaultIssue","slice","catch","err","alert","Page","currentPage","activePage","handleDisplay","page","pageGroup","i","Number","push","handlepageGroup","Display","issues","show","flag","setCurrentPage","setActivePage","map","item","itemIndex","title","number","state","created_at","user","login","newIssues","newPage","startPage","endPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAgEeA,MA7Df,YAAyD,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,QAAU,EAC5BC,mBAAS,CAACC,SAAU,IAAKC,SAAU,MADP,mBAC7CC,EAD6C,KACvCC,EADuC,KAG9CC,EAAe,SAACC,GAAW,IAAD,EACVA,EAAMC,OAAnBC,EADuB,EACvBA,GAAIC,EADmB,EACnBA,MACTL,EAAQ,2BACDD,GADA,kBAEFK,EAAMC,MA6Bf,OACI,sBAAKD,GAAG,SAAR,UACI,gCACI,uBACIE,KAAK,OACLC,YAAY,kBACZC,UAAU,eACVJ,GAAG,WACHK,SAAUR,IACX,IACH,uBACIK,KAAK,OACLC,YAAY,mBACZC,UAAU,eACVJ,GAAG,WACHK,SAAUR,OAGlB,8BACI,wBAAQK,KAAK,SAASF,GAAG,eAAeM,QA5CjC,WACI,MAAhBX,EAAKF,UAAkC,MAAhBE,EAAKD,SAE3Ba,MAAM,+BAAD,OAAgCZ,EAAKF,SAArC,YAAiDE,EAAKD,SAAtD,YACJc,MAAK,SAAAC,GACF,GAAgB,MAAbA,EAAIC,OACH,OAAOD,EAAIE,OAEX,MAAMC,MAAM,GAAD,OAAIH,EAAIC,OAAR,iBAElBF,MAAK,SAAAK,GAEFzB,EAAUyB,GACV,IAAMC,EAAYD,EAAKE,OAAO,IAAI,EAAIF,EAAKE,OAAO,EAAIC,KAAKC,MAAMJ,EAAKE,OAAO,GAAK,EAC9EG,EAAeL,EAAKM,MAAM,EAAE,GAChC7B,EAAQ4B,GACR7B,EAAQyB,GACRvB,GAAQ,MAEX6B,OAAM,SAAAC,GAAG,OAAIC,MAAMD,MAGpBC,MAAM,4BAsBF,iC,YC5BDC,MA3Bf,YAA+D,IAAhDC,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,cAAeC,EAAO,EAAPA,KAC7CC,EAAY,GAiBlB,OACI,gCACI,wBAAQ1B,KAAK,SAASF,GAAG,YAAYM,QAASoB,EAA9C,SAA8D,OAjB9C,WACpB,IAAI,IAAIG,EAAE,EAAEA,EAAEC,OAAOH,GAAME,IACvBD,EAAUG,KAAK,wBAEK7B,KAAK,SACLF,GAAIwB,EAAcK,EAClBvB,QAASoB,EACTtB,UAAYoB,EAAYK,IAAKJ,EAAa,aAAe,WAL9D,SAOMD,EAAcK,GANVL,EAAcK,IAS3C,OAAOD,EAMFI,GACD,wBAAQ9B,KAAK,SAASF,GAAG,YAAYM,QAASoB,EAA9C,SAA8D,WC8B3DO,MAnDf,YAAuD,IAArCC,EAAoC,EAApCA,OAAQP,EAA4B,EAA5BA,KAAMQ,EAAsB,EAAtBA,KAAM7C,EAAgB,EAAhBA,QAAS8C,EAAO,EAAPA,KAAO,EACZ5C,mBAAS,GADG,mBAC3CgC,EAD2C,KAC9Ba,EAD8B,OAEd7C,mBAAS,GAFK,mBAE3CiC,EAF2C,KAE/Ba,EAF+B,KA4BlD,OACI,qCACI,qBAAKtC,GAAG,UAAR,SACKmC,EAAKI,KAAI,SAACC,EAAKC,GACZ,OAAQ,sBAAqBrC,UAAU,eAA/B,UACI,mBAAGA,UAAU,aAAb,SAA2BoC,EAAKE,QAChC,oBAAGtC,UAAU,cAAb,eAA8BoC,EAAKG,OAAnC,IAA4CH,EAAKI,MAAjD,SAA8DJ,EAAKK,WAAnE,OAAmFL,EAAKM,KAAKC,WAFvFN,QAMxBL,GAAQ,qBAAKpC,GAAG,aAAR,SACE,cAAC,EAAD,CACIwB,YAAaA,EACbC,WAAYA,EACZC,cAtCF,SAAC5B,GACnB,IAAIkD,EAAY,GAChB,GAAqB,cAAlBlD,EAAMC,OAAOC,IAAsC,cAAlBF,EAAMC,OAAOC,IAE7C,GAAGyB,EAAW,IAAI,EAClB,CACI,IAAMwB,EAA4B,cAAlBnD,EAAMC,OAAOC,GAAmBwB,EAAc,EAAIA,EAAa,EAC/Ea,EAAeY,QAIvB,CACI,IAAIC,EAA0C,GAA7BpB,OAAOhC,EAAMC,OAAOC,IAAM,GACvCmD,EAAkC,EAAxBrB,OAAOhC,EAAMC,OAAOC,IAE9BgD,EADDd,EAAOnB,QAAQoC,EACFjB,EAAOf,MAAM+B,EAAWC,GAExBjB,EAAOf,MAAM+B,GAE7B5D,EAAQ0D,GACRV,EAAcR,OAAOhC,EAAMC,OAAOC,OAmBlB2B,KAAMA,UC5BnByB,MAdf,WAAgB,IAAD,EACe5D,mBAAS,KADxB,mBACN0C,EADM,KACE9C,EADF,OAEWI,mBAAS,KAFpB,mBAENmC,EAFM,KAEAtC,EAFA,OAGWG,mBAAS,IAHpB,mBAGN2C,EAHM,KAGA7C,EAHA,OAIWE,oBAAS,GAJpB,mBAIN4C,EAJM,KAIA7C,EAJA,KAMb,OACE,sBAAKa,UAAU,MAAf,UACE,cAAC,EAAD,CAAQhB,UAAWA,EAAWC,QAASA,EAASC,QAASA,EAASC,QAASA,IAC3E,cAAC,EAAD,CAAS2C,OAAQA,EAAQP,KAAMA,EAAMQ,KAAMA,EAAM7C,QAASA,EAAS8C,KAAMA,QCFhEiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3d14c0d3.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport './index.css';\r\n\r\nfunction Search({setIssues, setPage, setShow, setFlag}) {\r\n    const [repo, setRepo] = useState({username: \" \", reponame: \" \"});\r\n\r\n    const handleChange = (event) => {\r\n        let {id, value} = event.target;\r\n        setRepo({\r\n            ...repo,\r\n            [id] : value\r\n        });\r\n    };\r\n\r\n    const handleRepo = () => {\r\n        if(repo.username!==\" \" && repo.reponame!==\" \")\r\n        {\r\n            fetch(`http://api.github.com/repos/${repo.username}/${repo.reponame}/issues`)\r\n            .then(res => {\r\n                if(res.status===200)\r\n                    return res.json();\r\n                else\r\n                    throw Error(`${res.status} occurred`);\r\n            })\r\n            .then(data => {\r\n                // console.log(data);\r\n                setIssues(data);\r\n                const totalPage = data.length%8===0 ? data.length/8 : Math.floor(data.length/8) + 1;\r\n                let defaultIssue = data.slice(0,9);\r\n                setShow(defaultIssue);\r\n                setPage(totalPage);\r\n                setFlag(true);\r\n            })\r\n            .catch(err => alert(err));\r\n        }\r\n        else\r\n            alert(\"Input fields are empty!\");\r\n    };\r\n\r\n    return (\r\n        <div id=\"search\">\r\n            <div>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"GitHub Username\" \r\n                    className=\"github-input\" \r\n                    id=\"username\" \r\n                    onChange={handleChange}\r\n                />{\" \"}\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"GitHub Repo Name\" \r\n                    className=\"github-input\"\r\n                    id=\"reponame\" \r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"button\" id=\"search-issue\" onClick={handleRepo}>Search Issues</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nfunction Page({currentPage, activePage, handleDisplay, page}) {\r\n    const pageGroup = [];\r\n\r\n    const handlepageGroup = () => {\r\n        for(let i=0;i<Number(page);i++) {\r\n            pageGroup.push(<button \r\n                                key={currentPage + i} \r\n                                type=\"button\" \r\n                                id={currentPage + i} \r\n                                onClick={handleDisplay}\r\n                                className={(currentPage+i)===activePage ? \"pageActive\" : \"pageitem\"}\r\n                            >\r\n                                {currentPage + i}\r\n                            </button>);\r\n        }\r\n        return pageGroup;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button type=\"button\" id=\"decrement\" onClick={handleDisplay}>{\"<<\"}</button>\r\n            {handlepageGroup()}\r\n            <button type=\"button\" id=\"increment\" onClick={handleDisplay}>{\">>\"}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page;\r\n","import React,{useState} from 'react';\r\nimport './index.css';\r\nimport Page from '../Page';\r\n\r\nfunction Display({issues, page, show, setShow, flag}) {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [activePage, setActivePage] = useState(1);\r\n\r\n    const handleDisplay = (event) => {\r\n        let newIssues = [];\r\n        if(event.target.id===\"increment\" || event.target.id===\"decrement\")\r\n        {\r\n            if(activePage%5===0)\r\n            {\r\n                const newPage = event.target.id===\"increment\" ? currentPage + 1 : currentPage -1 ;\r\n                setCurrentPage(newPage);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            let startPage = (Number(event.target.id) - 1)*8;\r\n            let endPage = Number(event.target.id)*8;\r\n            if(issues.length>=endPage)\r\n                newIssues = issues.slice(startPage, endPage);\r\n            else \r\n                newIssues = issues.slice(startPage);\r\n\r\n            setShow(newIssues);\r\n            setActivePage(Number(event.target.id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div id=\"display\">\r\n                {show.map((item,itemIndex) => {\r\n                    return  <div key={itemIndex} className=\"display-item\">\r\n                                <p className=\"upper-para\">{item.title}</p>\r\n                                <p className=\"bottom-para\"># {item.number} {item.state}ed on {item.created_at} by {item.user.login}</p>            \r\n                            </div>\r\n                })}\r\n            </div>\r\n            { flag && <div id=\"pagination\">\r\n                        <Page \r\n                            currentPage={currentPage}\r\n                            activePage={activePage} \r\n                            handleDisplay={handleDisplay} \r\n                            page={page}\r\n                        />\r\n                      </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Display;\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport Display from './components/Display';\n\nfunction App() {\n  const [issues, setIssues] = useState(\" \");\n  const [page, setPage] = useState(\" \");\n  const [show, setShow] = useState([]);\n  const [flag, setFlag] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Search setIssues={setIssues} setPage={setPage} setShow={setShow} setFlag={setFlag} />\n      <Display issues={issues} page={page} show={show} setShow={setShow} flag={flag} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}